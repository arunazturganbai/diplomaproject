<%- include('partials/header') %>
<!DOCTYPE html>
<html lang="kk">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="../public/logo-transparent.png" type="image/x-icon">
  <title>Карта жестовых языков Казахстана</title>
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <!-- Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, #FFF9E6 0%, #f8f4e0 100%);
      color: #002137;
      min-height: 100vh;
      overflow-x: hidden;
    }

    .page-header {
      text-align: center;
      padding: 2rem 1rem;
      background: linear-gradient(135deg, #002137 0%, #1a3a52 100%);
      color: white;
      position: relative;
      overflow: hidden;
    }

    .page-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="%23ffda00" opacity="0.1"/><circle cx="75" cy="75" r="1.5" fill="%23ffda00" opacity="0.05"/><circle cx="50" cy="10" r="0.8" fill="%23ffda00" opacity="0.08"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
      opacity: 0.3;
    }

    .page-header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      position: relative;
      z-index: 1;
    }

    .page-header p {
      font-size: 1.1rem;
      opacity: 0.9;
      position: relative;
      z-index: 1;
    }

    .main-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 2rem 1rem;
      position: relative;
    }

    .stats-bar {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-bottom: 2rem;
      flex-wrap: wrap;
    }

    .stat-item {
      background: white;
      padding: 1rem 1.5rem;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,33,55,0.1);
      text-align: center;
      min-width: 120px;
      border: 2px solid transparent;
      transition: all 0.3s ease;
    }

    .stat-item:hover {
      border-color: #ffda00;
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0,33,55,0.15);
    }

    .stat-number {
      font-size: 1.5rem;
      font-weight: 700;
      color: #002137;
      display: block;
    }

    .stat-label {
      font-size: 0.9rem;
      color: #666;
      margin-top: 0.2rem;
    }

    .map-container {
      background: white;
      border-radius: 20px;
      padding: 1.5rem;
      box-shadow: 0 10px 40px rgba(0,33,55,0.12);
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
    }

    .map-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, #002137, #ffda00, #002137);
    }

    .map-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
      flex-wrap: wrap;
      gap: 1rem;
    }

    .map-title {
      font-size: 1.3rem;
      font-weight: 600;
      color: #002137;
    }

    .map-controls {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }

    .control-btn {
      background: #002137;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      cursor: pointer;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .control-btn:hover {
      background: #ffda00;
      color: #002137;
      transform: translateY(-1px);
    }

    .control-btn.active {
      background: #ffda00;
      color: #002137;
    }

    #map {
      height: 70vh;
      min-height: 500px;
      border-radius: 12px;
      position: relative;
      z-index: 1;
      border: 3px solid #f0f0f0;
    }

    .info-panel {
      background: white;
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 10px 40px rgba(0,33,55,0.12);
      margin-top: 2rem;
    }

    .info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 1.5rem;
    }

    .info-card {
      background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
      padding: 1.5rem;
      border-radius: 12px;
      border-left: 4px solid #ffda00;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .info-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0,33,55,0.1);
    }

    .info-card h3 {
      color: #002137;
      font-size: 1.2rem;
      margin-bottom: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .info-card p {
      color: #555;
      line-height: 1.6;
    }

    /* Custom Popup Styles */
    .custom-popup {
      font-family: 'Inter', sans-serif;
    }

    .popup-header {
      background: linear-gradient(135deg, #002137, #1a3a52);
      color: white;
      padding: 1rem;
      border-radius: 8px 8px 0 0;
      margin: -10px -10px 10px -10px;
    }

    .popup-title {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 0.3rem;
    }

    .popup-subtitle {
      font-size: 0.9rem;
      opacity: 0.8;
    }

    .popup-content {
      padding: 0.5rem 0;
    }

    .popup-stats {
      display: flex;
      gap: 1rem;
      margin: 0.5rem 0;
    }

    .popup-stat {
      text-align: center;
      font-size: 0.8rem;
    }

    .popup-stat-number {
      font-weight: 600;
      color: #002137;
      display: block;
    }

    .city-button {
      background: linear-gradient(135deg, #ffda00, #f5c800);
      color: #002137;
      border: none;
      padding: 0.8rem 1.5rem;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 600;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      width: 100%;
      margin-top: 0.8rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .city-button:hover {
      background: linear-gradient(135deg, #002137, #1a3a52);
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0,33,55,0.3);
    }

    /* Modal Improvements */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.8);
      backdrop-filter: blur(10px);
      z-index: 2000;
      animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .modal-content {
      background: white;
      margin: 2% auto;
      padding: 0;
      width: 60%;
      max-width: 500px;
      border-radius: 15px;
      position: relative;
      box-shadow: 0 20px 60px rgba(0,33,55,0.3);
      overflow: hidden;
      animation: slideIn 0.3s ease;
    }

    @keyframes slideIn {
      from { transform: translateY(-50px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }

    .modal-header {
      background: linear-gradient(135deg, #002137, #1a3a52);
      color: white;
      padding: 1rem 2rem;
      position: relative;
    }

    .modal-header h2 {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 0;
    }

    .close-modal {
      position: absolute;
      top: 1rem;
      right: 1.5rem;
      font-size: 2rem;
      font-weight: normal;
      cursor: pointer;
      color: white;
      transition: all 0.3s ease;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      background: rgba(255,255,255,0.1);
    }

    .close-modal:hover {
      background: #ffda00;
      color: #002137;
      transform: rotate(90deg);
    }

    .modal-body {
      padding: 2rem;
    }

    .video-container {
      position: relative;
      padding-bottom: 56.25%;
      height: 0;
      overflow: hidden;
      border-radius: 12px;
      background: #f8f9fa;
      box-shadow: inset 0 2px 10px rgba(0,0,0,0.1);
    }

    .video-container video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 12px;
    }

    .video-info {
      margin-top: 1.5rem;
      padding: 1rem;
      background: #f8f9fa;
      border-radius: 12px;
      border-left: 4px solid #ffda00;
    }

    .video-info h3 {
      color: #002137;
      margin-bottom: 0.5rem;
      font-size: 1.1rem;
    }

    .video-info p {
      color: #555;
      line-height: 1.6;
      margin-bottom: 0.5rem;
    }

    /* Loading States */
    .loading {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 200px;
      color: #002137;
    }

    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f3f3;
      border-top: 4px solid #ffda00;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-right: 1rem;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .page-header h1 {
        font-size: 2rem;
      }
      
      .stats-bar {
        gap: 1rem;
      }
      
      .stat-item {
        min-width: 100px;
        padding: 0.8rem 1rem;
      }
      
      .map-container {
        padding: 1rem;
      }
      
      #map {
        height: 50vh;
        min-height: 400px;
      }
      
      .modal-content {
        width: 95%;
        margin: 5% auto;
      }
      
      .modal-body {
        padding: 1rem;
      }
      
      .info-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
      }
    }

    @media (max-width: 480px) {
      .main-container {
        padding: 1rem 0.5rem;
      }
      
      .page-header {
        padding: 1.5rem 1rem;
      }
      
      .page-header h1 {
        font-size: 1.8rem;
      }
      
      .map-controls {
        justify-content: center;
      }
      
      .control-btn {
        padding: 0.4rem 0.8rem;
        font-size: 0.8rem;
      }
    }
  </style>
</head>
<body>
  <!-- Page Header -->
  <div class="page-header">
    <h1><i class="fas fa-hands" style="margin-right: 0.5rem;"></i>Қазақстанның жестовых тілдер картасы</h1>
    <p>Елдің әртүрлі аймақтарындағы жестовый тілдерді зерттеңіз</p>
  </div>

  <div class="main-container">
    <!-- Statistics Bar -->
    <div class="stats-bar">
      <div class="stat-item">
        <span class="stat-number">3</span>
        <span class="stat-label">Қалалар</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">150+</span>
        <span class="stat-label">Жестер</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">5+</span>
        <span class="stat-label">Сағат видео</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">1000+</span>
        <span class="stat-label">Көрушілер</span>
      </div>
    </div>

    <!-- Map Container -->
    <div class="map-container">
      <div class="map-header">
        <h2 class="map-title"><i class="fas fa-map-marked-alt"></i> Интерактивті карта</h2>
        <div class="map-controls">
          <button class="control-btn active" onclick="toggleLayer('cities')">
            <i class="fas fa-city"></i> Қалалар
          </button>
          <button class="control-btn" onclick="toggleLayer('regions')">
            <i class="fas fa-map"></i> Облыстар
          </button>
          <button class="control-btn" onclick="resetView()">
            <i class="fas fa-home"></i> Бастапқы көрініс
          </button>
        </div>
      </div>
      
      <div id="map"></div>
    </div>

    <!-- Information Panel -->
    <div class="info-panel">
      <h2 style="color: #002137; margin-bottom: 1rem; text-align: center;">
        <i class="fas fa-info-circle"></i> Жестовый тіл туралы ақпарат
      </h2>
      
      <div class="info-grid">
        <div class="info-card">
          <h3><i class="fas fa-hand-paper"></i> Жестовый тіл деген не?</h3>
          <p>Жестовый тіл - бұл негізінен қол қимылдары, бет-әлпет өрнектері және дене қозғалыстары арқылы жүзеге асырылатын табиғи тіл. Ол есту қабілеті шектеулі адамдардың негізгі қарым-қатынас құралы болып табылады.</p>
        </div>
        
        <div class="info-card">
          <h3><i class="fas fa-globe-asia"></i> Қазақстандағы жестовый тіл</h3>
          <p>Қазақстанда қазақ жестовый тілі (ҚЖТ) мен орыс жестовый тілі (ОЖТ) қолданылады. Әртүрлі аймақтарда ерекшеліктер мен диалектілер бар, бұл тілдік алуандықты дәлелдейді.</p>
        </div>
        
        <div class="info-card">
          <h3><i class="fas fa-users"></i> Қауымдастық</h3>
          <p>Қазақстанда 120,000-нан астам есту қабілеті шектеулі адам тұрады. Жестовый тіл олардың мәдениеті мен қоғамдастығының маңызды бөлігі болып табылады.</p>
        </div>
        
        <div class="info-card">
          <h3><i class="fas fa-graduation-cap"></i> Білім беру</h3>
          <p>Жестовый тілді үйрену инклюзивті қоғам құруға және есту қабілеті шектеулі адамдармен тиімді қарым-қатынас орнатуға көмектеседі.</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Video Modal -->
  <div id="videoModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 id="modalTitle">Жестовый тіл</h2>
        <span class="close-modal">&times;</span>
      </div>
      <div class="modal-body">
        <div class="video-container">
          <video id="modalVideo" controls preload="metadata">
            Браузеріңіз видео элементін қолдамайды.
          </video>
        </div>
        <div class="video-info">
          <h3 id="videoInfoTitle">Видео туралы ақпарат</h3>
          <p id="videoInfoDescription">Бұл видеода қаланың жестовый тілінің ерекшеліктері көрсетілген.</p>
          <p><strong>Ұзақтығы:</strong> <span id="videoDuration">Жүктеп жатыр...</span></p>
          <p><strong>Тіл:</strong> Қазақ жестовый тілі</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    // Initialize map centered on Kazakhstan
    const map = L.map('map', {
      zoomControl: true,
      scrollWheelZoom: true,
      doubleClickZoom: true,
      boxZoom: true,
      keyboard: true,
      dragging: true,
      touchZoom: true
    }).setView([48.0196, 66.9237], 5);
    
    // Add custom tile layer with better styling
    const tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> | Жестовый тілдер картасы',
      maxZoom: 18,
      minZoom: 4
    }).addTo(map);

    // Enhanced city data with more information
    const cities = [
      {
        name: "Алматы",
        coords: [43.2567, 76.9286],
        videoUrl: "https://storage.googleapis.com/kazsign/city/%D0%90%D0%BB%D0%BC%D0%B0%D1%82%D1%8B.MOV",
        population: "2,000,000",
        signers: "15,000+",
        description: "Қазақстанның ең үлкен қаласы, жестовый тіл қауымдастығының орталығы",
        specialties: ["Сауда жестері", "Мәдени өрнектер", "Қаламанданған ерекшеліктер"]
      },
      {
        name: "Астана",
        coords: [51.1282, 71.4307],
        videoUrl: "https://storage.googleapis.com/kazsign/city/%D0%90%D1%81%D1%82%D0%B0%D0%BD%D0%B0.MOV",
        population: "1,350,000",
        signers: "8,000+",
        description: "Қазақстанның астанасы, мемлекеттік мекемелердің жестовый тілі",
        specialties: ["Ресми жестер", "Мемлекеттік терминдер", "Заманауи нысандар"]
      },
      {
        name: "Қарағанды",
        coords: [49.8047, 73.1036],
        videoUrl: "https://your-cloud-storage.com/path/to/karaganda-sign.mp4",
        population: "500,000",
        signers: "3,500+",
        description: "Орталық Қазақстанның өнеркәсіп орталығы",
        specialties: ["Өнеркәсіптік жестер", "Шахта терминдері", "Аймақтық диалект"]
      }
    ];

    // Custom marker icons
    const createCustomIcon = (color) => {
      return L.divIcon({
        className: 'custom-marker',
        html: `
          <div style="
            background: linear-gradient(135deg, ${color}, ${color}dd);
            width: 25px;
            height: 25px;
            border-radius: 50% 50% 50% 0;
            border: 3px solid white;
            box-shadow: 0 4px 12px rgba(0,33,55,0.3);
            transform: rotate(-45deg);
            display: flex;
            align-items: center;
            justify-content: center;
          ">
            <i class="fas fa-hands" style="
              color: white;
              font-size: 10px;
              transform: rotate(45deg);
            "></i>
          </div>
        `,
        iconSize: [25, 25],
        iconAnchor: [12, 25],
        popupAnchor: [0, -25]
      });
    };

    // Add markers to map with enhanced popups
    const markers = [];
    cities.forEach((city, index) => {
      const colors = ['#ffda00', '#002137', '#ff6b6b'];
      const marker = L.marker(city.coords, {
        icon: createCustomIcon(colors[index % colors.length])
      }).addTo(map);
      
      const popupContent = `
        <div class="custom-popup">
          <div class="popup-header">
            <div class="popup-title">${city.name}</div>
            <div class="popup-subtitle">${city.description}</div>
          </div>
          <div class="popup-content">
            <div class="popup-stats">
              <div class="popup-stat">
                <span class="popup-stat-number">${city.population}</span>
                Халық саны
              </div>
              <div class="popup-stat">
                <span class="popup-stat-number">${city.signers}</span>
                Жестовый тіл пайдаланушылары
              </div>
            </div>
            <button 
              onclick="openVideoModal('${city.name}', '${city.videoUrl}', ${JSON.stringify(city).replace(/"/g, '&quot;')})"
              class="city-button"
            >
              <i class="fas fa-play"></i>
              Жестовый тілді көру
            </button>
          </div>
        </div>
      `;
      
      marker.bindPopup(popupContent, {
        maxWidth: 300,
        className: 'custom-popup-container'
      });
      
      markers.push(marker);
    });

    // Map control functions
    let activeLayer = 'cities';
    
    window.toggleLayer = function(layerType) {
      // Update button states
      document.querySelectorAll('.control-btn').forEach(btn => {
        btn.classList.remove('active');
      });
      event.target.classList.add('active');
      
      activeLayer = layerType;
      
      if (layerType === 'cities') {
        markers.forEach(marker => marker.addTo(map));
      } else if (layerType === 'regions') {
        // Hide city markers and show regional boundaries (future feature)
        markers.forEach(marker => map.removeLayer(marker));
        // Add regional boundaries here when available
      }
    };

    window.resetView = function() {
      map.setView([48.0196, 66.9237], 5);
      if (activeLayer === 'cities') {
        markers.forEach(marker => marker.addTo(map));
      }
    };

    // Enhanced modal functionality
    const modal = document.getElementById('videoModal');
    const closeBtn = document.querySelector('.close-modal');
    const videoPlayer = document.getElementById('modalVideo');
    const modalTitle = document.getElementById('modalTitle');
    const videoInfoTitle = document.getElementById('videoInfoTitle');
    const videoInfoDescription = document.getElementById('videoInfoDescription');
    const videoDuration = document.getElementById('videoDuration');
    
    window.openVideoModal = function(cityName, videoUrl, cityData) {
      const city = typeof cityData === 'string' ? JSON.parse(cityData.replace(/&quot;/g, '"')) : cityData;
      
      modalTitle.textContent = `${cityName} қаласының жестовый тілі`;
      videoInfoTitle.textContent = `${cityName} туралы толығырақ`;
      videoInfoDescription.textContent = city.description || `${cityName} қаласының жестовый тілінің ерекшеліктері мен мәдени аспектілері.`;
      
      videoPlayer.src = videoUrl;
      videoPlayer.load();
      
      // Update duration when metadata loads
      videoPlayer.addEventListener('loadedmetadata', function() {
        const duration = Math.floor(videoPlayer.duration);
        const minutes = Math.floor(duration / 60);
        const seconds = duration % 60;
        videoDuration.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
      });
      
      videoPlayer.addEventListener('error', function() {
        videoDuration.textContent = 'Видео жүктелмеді';
        videoInfoDescription.textContent = 'Кешіріңіз, видео қазір қол жетімсіз. Кейінірек қайталап көріңіз.';
      });
      
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden'; // Prevent background scrolling
      
      // Auto-play with error handling
      setTimeout(() => {
        videoPlayer.play().catch(e => {
          console.log("Автоматты ойнату блокталды:", e);
        });
      }, 300);
    };
    
    // Close modal function
        function closeModal() {
      modal.style.display = 'none';
      videoPlayer.pause();
      videoPlayer.currentTime = 0;
      document.body.style.overflow = 'auto'; // Restore scrolling
    }
    
    // Bind close events
    closeBtn.addEventListener('click', closeModal);
    
    // Close when clicking outside the modal
    modal.addEventListener('click', function(event) {
      if (event.target === modal) {
        closeModal();
      }
    });
    
    // Close with Escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape' && modal.style.display === 'block') {
        closeModal();
      }
    });
 </script>
  <%- include('partials/footer') %>